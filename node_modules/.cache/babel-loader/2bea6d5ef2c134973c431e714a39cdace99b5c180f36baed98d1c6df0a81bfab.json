{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"TODO List\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.newTodo = $event),\n    placeholder: \"title\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.newTodo]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.addTodo && _ctx.addTodo(...args))\n  }, \"Edit\")]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","type","_ctx","newTodo","$event","placeholder","onClick","_cache","args","addTodo"],"sources":["C:\\Users\\user\\Desktop\\abc\\todo\\testtodo\\src\\views\\Form.vue"],"sourcesContent":["\n\n\n<template>\n  <div>\n    <h1>TODO List</h1>\n    <input type=\"text\" v-model=\"newTodo\" placeholder=\"title\">\n    <button @click=\"addTodo\">Edit</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      newTodo: {\n        title: '',\n        desc: '',\n        name: '',\n      },\n    };\n  },\n  methods: {\n    addTodo() {\n      if (this.newTodo.trim() === '') return;\n      this.$store.dispatch('addTodoAction', this.newTodo);\n      this.newTodo. = '';\n    },\n  },\n  created() {\n    this.$store.commit('initializeStore');\n  },\n};\n</script>\n"],"mappings":";gCAKIA,mBAAA,CAAkB,YAAd,WAAS;;;uBADfC,mBAAA,CAIM,cAHJC,UAAkB,E,gBAClBF,mBAAA,CAAyD;IAAlDG,IAAI,EAAC,MAAM;+DAAUC,IAAA,CAAAC,OAAO,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAArBH,IAAA,CAAAC,OAAO,E,GACnCL,mBAAA,CAAsC;IAA7BQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,IAAA,CAAAO,OAAA,IAAAP,IAAA,CAAAO,OAAA,IAAAD,IAAA,CAAO;KAAE,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}