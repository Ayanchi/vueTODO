{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"TODO List\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.newTodo = $event),\n    placeholder: \"Enter your task here\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.newTodo]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.addTodo && _ctx.addTodo(...args))\n  }, \"click\"), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.todos, (todo, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createTextVNode(_toDisplayString(todo) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.deleteTodo(index)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_2)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","type","_ctx","newTodo","$event","placeholder","onClick","_cache","args","addTodo","_Fragment","_renderList","todos","todo","index","key","deleteTodo","_hoisted_2"],"sources":["C:\\Users\\user\\Desktop\\abc\\todo\\testtodo\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>TODO List</h1>\n    <input type=\"text\" v-model=\"newTodo\" placeholder=\"Enter your task here\">\n    <button @click='addTodo'>click</button>\n    <ul>\n      <li v-for=\"(todo, index) in todos\" :key=\"index\">\n        {{ todo }}\n        <button @click=\"deleteTodo(index)\">Delete</button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      newTodo: [\n        {\n          id: Date.now(),\n          name:\n        }\n      ],\n    };\n  },\n  computed: {\n    todos() {\n      return this.$store.getters.getAllTodos;\n    },\n  },\n  methods: {\n    addTodo() {\n      this.$store.dispatch('addTodoAction', this.newTodo);\n      this.newTodo = '';\n    },\n    deleteTodo(index) {\n      this.$store.dispatch('deleteTodoAction', index);\n    },\n  },\n  created() {\n    this.$store.commit('initializeStore');\n  },\n};\n</script>"],"mappings":";gCAEIA,mBAAA,CAAkB,YAAd,WAAS;;;uBADfC,mBAAA,CAUM,cATJC,UAAkB,E,gBAClBF,mBAAA,CAAwE;IAAjEG,IAAI,EAAC,MAAM;+DAAUC,IAAA,CAAAC,OAAO,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAArBH,IAAA,CAAAC,OAAO,E,GACnCL,mBAAA,CAAuC;IAA9BQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,IAAA,CAAAO,OAAA,IAAAP,IAAA,CAAAO,OAAA,IAAAD,IAAA,CAAO;KAAE,OAAK,GAC9BV,mBAAA,CAKK,c,kBAJHC,mBAAA,CAGKW,SAAA,QAAAC,WAAA,CAHuBT,IAAA,CAAAU,KAAK,GAArBC,IAAI,EAAEC,KAAK;yBAAvBf,mBAAA,CAGK;MAH+BgB,GAAG,EAAED;IAAK,I,kCACzCD,IAAI,IAAG,GACV,iBAAAf,mBAAA,CAAkD;MAAzCQ,OAAK,EAAAF,MAAA,IAAEF,IAAA,CAAAc,UAAU,CAACF,KAAK;OAAG,QAAM,iBAAAG,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}